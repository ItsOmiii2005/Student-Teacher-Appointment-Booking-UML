<ref *2> IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined,
      aborted: undefined
    },
    _readableState: ReadableState {        
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 60294924
    },
    _maxListeners: undefined,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,     
      _events: {
        close: [Array],
        error: [Array],
        prefinish: undefined,
        finish: undefined,
        drain: [Function: bound socketOnDrain],
        data: [Function: bound socketOnData],
        end: [Array],
        readable: undefined,
        timeout: [Function: socketOnTimeout],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]   
      },
      _readableState: ReadableState {      
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 193997060        
      },
      _writableState: WritableState {      
        highWaterMark: 16384,
        length: 0,
        corked: 0,
        onwrite: [Function: bound onwrite],
        writelen: 0,
        bufferedIndex: 0,
        pendingcb: 0,
        [Symbol(kState)]: 17564420,        
        [Symbol(kBufferedValue)]: null     
      },
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,     
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,   
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype], 
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        _listeningId: 1,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 16384,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::5000',       
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,        
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 47,     
        [Symbol(kUniqueHeaders)]: null,    
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2154,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,  
          [Symbol(asyncId)]: 55,
          [Symbol(triggerId)]: 48
        }
      },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,     
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,   
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype], 
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        _listeningId: 1,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 16384,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::5000',       
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,        
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 47,     
        [Symbol(kUniqueHeaders)]: null,    
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2154,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,  
          [Symbol(asyncId)]: 55,
          [Symbol(triggerId)]: 48
        }
      },
      parser: HTTPParser {
        '0': null,
        '1': [Function: parserOnHeaders],  
        '2': [Function: parserOnHeadersComplete],
        '3': [Function: parserOnBody],     
        '4': [Function: parserOnMessageComplete],
        '5': [Function: bound onParserExecute],
        '6': [Function: bound onParserTimeout],
        _headers: [],
        _url: '',
        socket: [Circular *1],
        incoming: [Circular *2],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        joinDuplicateHeaders: null,        
        [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
      },
      on: [Function: socketListenerWrap],  
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: ServerResponse {       
        _events: [Object: null prototype], 
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true, 
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,        
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: [Circular *1],
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],  
        __onFinished: [Function],
        [Symbol(shapeMode)]: false,        
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,        
        [Symbol(kNeedDrain)]: false,       
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype],
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,   
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null     
      },
      _peername: { address: '::1', family: 'IPv6', port: 54455 },
      [Symbol(async_id_symbol)]: 131,      
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(lastWriteQueueSize)]: 0,     
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,      
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'host',
      'localhost:5000',
      'connection',
      'close',
      'content-length',
      '48',
      'sec-ch-ua',
      '"Not/A)Brand";v="8", "Chromium";v="126", "Google Chrome";v="126"',
      'accept',
      'application/json, text/plain, */*', 
      'content-type',
      'application/json',
      'dnt',
      '1',
      'sec-ch-ua-mobile',
      '?0',
      'user-agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36',     
      'sec-ch-ua-platform',
      '"Windows"',
      'origin',
      'http://localhost:5000',
      'sec-fetch-site',
      'same-origin',
      'sec-fetch-mode',
      'cors',
      'sec-fetch-dest',
      'empty',
      'referer',
      'http://localhost:5173/login',       
      'accept-encoding',
      'gzip, deflate, br, zstd',
      'accept-language',
      'en-US,en;q=0.9,hi-IN;q=0.8,hi;q=0.7,mr-IN;q=0.6,mr;q=0.5',
      'cookie',
      '_ga=GA1.1.220714209.1705087042; g_state={"i_t":1708288232063,"i_l":0}; PHPSESSID=ork2rjtt4681mmkm1ft2bj5jcm; session=eyJ1c2VybmFtZSI6Ik9tYW5hbmQifQ.ZhPFZA.c6Eiq5XMqqr7Snme5PjogztW9i8; isFixed=false; connect.sid=s%3APGQnVS1wO8G7AZ5MlQO0MBZEaLCBFRZf.pHgYBkFA4oi3Z2r0y5KJOc7HCmPrEoPCwKzhJpGPrAY; token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2Njc4OGE2ZTZjMzE3M2E4YWM4MWM1OTciLCJpYXQiOjE3MTkzNDIzNzQsImV4cCI6MTcxOTM0NTk3NH0.5Y1et2E3rdn8zM7b9NMYxFhnbNRPLWQJTNUTfKScFRU'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/login',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,     
      _events: {
        close: [Array],
        error: [Array],
        prefinish: undefined,
        finish: undefined,
        drain: [Function: bound socketOnDrain],
        data: [Function: bound socketOnData],
        end: [Array],
        readable: undefined,
        timeout: [Function: socketOnTimeout],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]   
      },
      _readableState: ReadableState {      
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 193997060        
      },
      _writableState: WritableState {      
        highWaterMark: 16384,
        length: 0,
        corked: 0,
        onwrite: [Function: bound onwrite],
        writelen: 0,
        bufferedIndex: 0,
        pendingcb: 0,
        [Symbol(kState)]: 17564420,        
        [Symbol(kBufferedValue)]: null     
      },
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,     
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,   
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype], 
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        _listeningId: 1,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 16384,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::5000',       
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,        
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 47,     
        [Symbol(kUniqueHeaders)]: null,    
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2154,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,  
          [Symbol(asyncId)]: 55,
          [Symbol(triggerId)]: 48
        }
      },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,     
        requestTimeout: 300000,
        headersTimeout: 60000,
        keepAliveTimeout: 5000,
        connectionsCheckingInterval: 30000,
        requireHostHeader: true,
        joinDuplicateHeaders: undefined,   
        rejectNonStandardBodyWrites: false,
        _events: [Object: null prototype], 
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        _listeningId: 1,
        allowHalfOpen: true,
        pauseOnConnect: false,
        noDelay: true,
        keepAlive: false,
        keepAliveInitialDelay: 0,
        highWaterMark: 16384,
        httpAllowHalfOpen: false,
        timeout: 0,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        _connectionKey: '6::::5000',       
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(shapeMode)]: false,        
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 47,     
        [Symbol(kUniqueHeaders)]: null,    
        [Symbol(http.server.connections)]: ConnectionsList {},
        [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
          _idleTimeout: 30000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 2154,
          _onTimeout: [Function: bound checkConnections],
          _timerArgs: undefined,
          _repeat: 30000,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,  
          [Symbol(asyncId)]: 55,
          [Symbol(triggerId)]: 48
        }
      },
      parser: HTTPParser {
        '0': null,
        '1': [Function: parserOnHeaders],  
        '2': [Function: parserOnHeadersComplete],
        '3': [Function: parserOnBody],     
        '4': [Function: parserOnMessageComplete],
        '5': [Function: bound onParserExecute],
        '6': [Function: bound onParserTimeout],
        _headers: [],
        _url: '',
        socket: [Circular *1],
        incoming: [Circular *2],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        joinDuplicateHeaders: null,        
        [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
      },
      on: [Function: socketListenerWrap],  
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: ServerResponse {       
        _events: [Object: null prototype], 
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true, 
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,        
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: [Circular *1],
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],  
        __onFinished: [Function],
        [Symbol(shapeMode)]: false,        
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,        
        [Symbol(kNeedDrain)]: false,       
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype],
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,   
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null     
      },
      _peername: { address: '::1', family: 'IPv6', port: 54455 },
      [Symbol(async_id_symbol)]: 131,      
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
        [Symbol(owner_symbol)]: [Circular *1]
      },
      [Symbol(lastWriteQueueSize)]: 0,     
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,      
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '/auth',
    originalUrl: '/auth/login',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/login',
      path: '/login',
      href: '/login',
      _raw: '/login'
    },
    params: {},
    query: {},
    res: <ref *3> ServerResponse {
      _events: [Object: null prototype] {  
        finish: [Array],
        end: [Function: onevent]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,   
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,   
        _events: [Object],
        _readableState: [ReadableState],   
        _writableState: [WritableState],   
        allowHalfOpen: true,
        _maxListeners: undefined,
        _eventsCount: 8,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        parser: [HTTPParser],
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: [Circular *3],       
        _peername: [Object],
        [Symbol(async_id_symbol)]: 131,    
        [Symbol(kHandle)]: [TCP],
        [Symbol(lastWriteQueueSize)]: 0,   
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,        
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,       
        [Symbol(kSetKeepAlive)]: false,    
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {}, 
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead],    
      __onFinished: [Function: listener] { queue: [Array] },
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        'x-powered-by': [Array],
        'access-control-allow-origin': [Array],
        vary: [Array],
        'access-control-allow-credentials':
   [Array]
      },
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,     
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null       
    },
    body: { email: 'admin@example.com', password: 'admin' },
    _body: true,
    length: undefined,
    _eventsCount: 0,
    _startAt: [ 211586, 209065400 ],       
    _startTime: 2024-06-25T19:06:23.910Z,  
    _remoteAddress: '::1',
    route: Route {
      path: '/login',
      stack: [ [Layer], [Layer] ],
      methods: { post: true }
    },
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: 'localhost:5000',
      connection: 'close',
      'content-length': '48',
      'sec-ch-ua': '"Not/A)Brand";v="8", "Chromium";v="126", "Google Chrome";v="126"',
      accept: 'application/json, text/plain, */*',
      'content-type': 'application/json',  
      dnt: '1',
      'sec-ch-ua-mobile': '?0',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36',
      'sec-ch-ua-platform': '"Windows"',   
      origin: 'http://localhost:5000',     
      'sec-fetch-site': 'same-origin',     
      'sec-fetch-mode': 'cors',
      'sec-fetch-dest': 'empty',
      referer: 'http://localhost:5173/login',
      'accept-encoding': 'gzip, deflate, br, zstd',
      'accept-language': 'en-US,en;q=0.9,hi-IN;q=0.8,hi;q=0.7,mr-IN;q=0.6,mr;q=0.5',
      cookie: '_ga=GA1.1.220714209.1705087042; g_state={"i_t":1708288232063,"i_l":0}; PHPSESSID=ork2rjtt4681mmkm1ft2bj5jcm; session=eyJ1c2VybmFtZSI6Ik9tYW5hbmQifQ.ZhPFZA.c6Eiq5XMqqr7Snme5PjogztW9i8; isFixed=false; connect.sid=s%3APGQnVS1wO8G7AZ5MlQO0MBZEaLCBFRZf.pHgYBkFA4oi3Z2r0y5KJOc7HCmPrEoPCwKzhJpGPrAY; token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2Njc4OGE2ZTZjMzE3M2E4YWM4MWM1OTciLCJpYXQiOjE3MTkzNDIzNzQsImV4cCI6MTcxOTM0NTk3NH0.5Y1et2E3rdn8zM7b9NMYxFhnbNRPLWQJTNUTfKScFRU'   
    [Symbol(kHeadersCount)]: 36,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  }